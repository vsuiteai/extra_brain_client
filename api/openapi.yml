openapi: 3.1.0
info:
  title: vSuite Brain Backend API
  version: 1.0.0
  description: API documentation for authentication and user management.

servers:
  - url: "http://localhost:5001"
  - url: "https://vsuite-service-prod-1046215561949.us-central1.run.app"

tags:
  - name: "Intuit – Quickbooks"
  - name: "Xero"
  - name: "Gusto"
  - name: "Sales Force"
  - name: "NetSuite"

paths:
  /api/integrations/gusto/connect:
    get:
      summary: Start Gusto OAuth 2.0 flow
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Authorization URL payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirectUrl:
                    type: string
                    format: uri
        '401':
          description: Unauthorized
        '500':
          description: Failed to start Gusto OAuth

  /api/integrations/gusto/callback:
    get:
      summary: Gusto OAuth callback
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
        - name: state
          in: query
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect back to frontend after successful connection
        '400':
          description: Missing or invalid parameters
        '500':
          description: Failed to complete Gusto OAuth

  /api/integrations/gusto/companies:
    get:
      summary: List Gusto companies
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Companies
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Gusto companies

  /api/integrations/gusto/company:
    get:
      summary: Get a Gusto company by ID
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Company data
        '400':
          description: Missing companyId
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Gusto company

  /api/integrations/gusto/employees:
    get:
      summary: List Gusto employees for a company
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Employees
        '400':
          description: Missing companyId
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Gusto employees

  /api/integrations/gusto/payrolls:
    get:
      summary: List Gusto payrolls for a company
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Payrolls
        '400':
          description: Missing companyId
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Gusto payrolls

  /api/integrations/gusto/locations:
    get:
      summary: List Gusto locations for a company
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Locations
        '400':
          description: Missing companyId
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Gusto locations

  /api/integrations/gusto/status:
    get:
      summary: Check Gusto connection status for current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Connection status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  connected:
                    type: boolean
                    description: Whether user has an active Gusto connection
                  status:
                    type: string
                    enum: [active, expired, not_connected]
                    description: Current connection status
                  expiresAt:
                    type: integer
                    description: Token expiration timestamp (if connected)
                  createdAt:
                    type: string
                    format: date-time
                    description: When the connection was created (if connected)
                  companyId:
                    type: string
                    description: Associated company ID (if any)
                  company:
                    type: object
                    description: Company data snapshot (if any)
        '401':
          description: Unauthorized
        '500':
          description: Failed to check Gusto connection status

  /api/integrations/quickbooks/connect:
    get:
      summary: Start QuickBooks OAuth 2.0 flow
      tags:
        - Intuit – Quickbooks
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Authorization URL payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirectUrl:
                    type: string
                    format: uri
        '401':
          description: Unauthorized
        '500':
          description: Failed to start QuickBooks OAuth

  /api/integrations/quickbooks/callback:
    get:
      summary: QuickBooks OAuth callback
      tags:
        - Intuit – Quickbooks
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
        - name: state
          in: query
          required: true
          schema:
            type: string
        - name: realmId
          in: query
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect back to frontend after successful connection
        '400':
          description: Missing or invalid parameters
        '500':
          description: Failed to complete QuickBooks OAuth

  /api/integrations/quickbooks/accounts:
    get:
      summary: List QuickBooks accounts (Chart of Accounts)
      tags:
        - Intuit – Quickbooks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Accounts
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch QuickBooks accounts

  /api/integrations/quickbooks/customers:
    get:
      summary: List QuickBooks customers
      tags:
        - Intuit – Quickbooks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Customers
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch QuickBooks customers

  /api/integrations/quickbooks/vendors:
    get:
      summary: List QuickBooks vendors
      tags:
        - Intuit – Quickbooks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Vendors
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch QuickBooks vendors

  /api/integrations/quickbooks/items:
    get:
      summary: List QuickBooks items
      tags:
        - Intuit – Quickbooks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Items
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch QuickBooks items

  /api/integrations/quickbooks/invoices:
    get:
      summary: List QuickBooks invoices
      tags:
        - Intuit – Quickbooks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Invoices
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch QuickBooks invoices

  /api/integrations/quickbooks/bills:
    get:
      summary: List QuickBooks bills
      tags:
        - Intuit – Quickbooks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Bills
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch QuickBooks bills

  /api/integrations/quickbooks/payments:
    get:
      summary: List QuickBooks payments
      tags:
        - Intuit – Quickbooks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Payments
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch QuickBooks payments

  /api/integrations/quickbooks/journals:
    get:
      summary: List QuickBooks journals
      tags:
        - Intuit – Quickbooks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Journals
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch QuickBooks journals

  /api/integrations/quickbooks/general-ledger:
    get:
      summary: QuickBooks General Ledger report
      tags:
        - Intuit – Quickbooks
      security:
        - bearerAuth: []
      parameters:
        - name: from
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: to
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: General ledger report
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch QuickBooks general ledger

  /api/integrations/quickbooks/status:
    get:
      summary: Check QuickBooks connection status for current user
      tags:
        - Intuit – Quickbooks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Connection status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  connected:
                    type: boolean
                    description: Whether user has an active QuickBooks connection
                  status:
                    type: string
                    enum: [active, expired, not_connected]
                    description: Current connection status
                  expiresAt:
                    type: integer
                    description: Token expiration timestamp (if connected)
                  createdAt:
                    type: string
                    format: date-time
                    description: When the connection was created (if connected)
                  realmId:
                    type: string
                    description: QuickBooks company realm ID (if connected)
                  companyId:
                    type: string
                    description: Associated company ID (if any)
                  company:
                    type: object
                    description: Company data snapshot (if any)
        '401':
          description: Unauthorized
        '500':
          description: Failed to check QuickBooks connection status

  /api/integrations/xero/connect:
    get:
      summary: Start Xero OAuth 2.0 flow
      tags:
        - Xero
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Authorization URL payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirectUrl:
                    type: string
                    format: uri
        '401':
          description: Unauthorized
        '500':
          description: Failed to start Xero OAuth

  /api/integrations/xero/callback:
    get:
      summary: Xero OAuth callback
      tags:
        - Xero
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
        - name: state
          in: query
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect back to frontend after successful connection
        '400':
          description: Missing or invalid parameters
        '500':
          description: Failed to complete Xero OAuth

  /api/integrations/xero/accounts:
    get:
      summary: List Xero accounts (Chart of Accounts)
      tags:
        - Xero
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Accounts
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Xero accounts

  /api/integrations/xero/contacts:
    get:
      summary: List Xero contacts
      tags:
        - Xero
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Contacts
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Xero contacts

  /api/integrations/xero/items:
    get:
      summary: List Xero items
      tags:
        - Xero
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Items
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Xero items

  /api/integrations/xero/invoices:
    get:
      summary: List Xero invoices (type ACCREC for sales, ACCPAY for bills)
      tags:
        - Xero
      security:
        - bearerAuth: []
      parameters:
        - name: type
          in: query
          required: false
          schema:
            type: string
            description: ACCREC (invoices) or ACCPAY (bills)
        - name: status
          in: query
          required: false
          schema:
            type: string
            description: Optional invoice status filter
        - name: page
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Invoices
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Xero invoices

  /api/integrations/xero/payments:
    get:
      summary: List Xero payments
      tags:
        - Xero
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Payments
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Xero payments

  /api/integrations/xero/journals:
    get:
      summary: List Xero journals
      tags:
        - Xero
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Journals
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Xero journals

  /api/integrations/xero/status:
    get:
      summary: Check Xero connection status for current user
      tags:
        - Xero
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Connection status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  connected:
                    type: boolean
                    description: Whether user has an active Xero connection
                  status:
                    type: string
                    enum: [active, expired, not_connected]
                    description: Current connection status
                  expiresAt:
                    type: integer
                    description: Token expiration timestamp (if connected)
                  createdAt:
                    type: string
                    format: date-time
                    description: When the connection was created (if connected)
                  tenantId:
                    type: string
                    description: Xero tenant ID (if connected)
                  tenantName:
                    type: string
                    description: Xero tenant name (if connected)
                  companyId:
                    type: string
                    description: Associated company ID (if any)
                  company:
                    type: object
                    description: Company data snapshot (if any)
        '401':
          description: Unauthorized
        '500':
          description: Failed to check Xero connection status

  /api/integrations/salesforce/connect:
    get:
      summary: Start Salesforce OAuth 2.0 flow
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Authorization URL payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirectUrl:
                    type: string
                    format: uri
        '401':
          description: Unauthorized
        '500':
          description: Failed to start Salesforce OAuth

  /api/integrations/salesforce/callback:
    get:
      summary: Salesforce OAuth callback
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
        - name: state
          in: query
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect back to frontend after successful connection
        '400':
          description: Missing or invalid parameters
        '500':
          description: Failed to complete Salesforce OAuth

  # NetSuite
  /api/integrations/netsuite/connect:
    get:
      summary: Start NetSuite OAuth 2.0 flow
      tags:
        - NetSuite
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Authorization URL payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  redirectUrl:
                    type: string
                    format: uri
        '401':
          description: Unauthorized
        '500':
          description: Failed to start NetSuite OAuth

  /api/integrations/netsuite/callback:
    get:
      summary: NetSuite OAuth callback
      tags:
        - NetSuite
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
        - name: state
          in: query
          required: true
          schema:
            type: string
      responses:
        '302':
          description: Redirect back to frontend after successful connection
        '400':
          description: Missing or invalid parameters
        '500':
          description: Failed to complete NetSuite OAuth

  /api/integrations/netsuite/accounts:
    get:
      summary: List NetSuite accounts (Chart of Accounts)
      tags:
        - NetSuite
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Accounts
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch NetSuite accounts

  /api/integrations/netsuite/journals:
    get:
      summary: List NetSuite journals
      tags:
        - NetSuite
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Journals
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch NetSuite journals

  /api/integrations/netsuite/invoices:
    get:
      summary: List NetSuite invoices
      tags:
        - NetSuite
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Invoices
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch NetSuite invoices

  /api/integrations/netsuite/bills:
    get:
      summary: List NetSuite bills
      tags:
        - NetSuite
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Bills
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch NetSuite bills

  /api/integrations/netsuite/payments:
    get:
      summary: List NetSuite payments
      tags:
        - NetSuite
      security:
        - bearerAuth: []
      parameters:
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [all, customer, vendor]
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Payments
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch NetSuite payments

  /api/integrations/netsuite/customers:
    get:
      summary: List NetSuite customers
      tags:
        - NetSuite
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Customers
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch NetSuite customers

  /api/integrations/netsuite/vendors:
    get:
      summary: List NetSuite vendors
      tags:
        - NetSuite
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Vendors
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch NetSuite vendors

  /api/integrations/netsuite/items:
    get:
      summary: List NetSuite items
      tags:
        - NetSuite
      security:
        - bearerAuth: []
      parameters:
        - name: types
          in: query
          required: false
          schema:
            type: string
            description: Comma-separated item types (e.g. inventoryItem,serviceSaleItem)
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Items
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch NetSuite items

  /api/integrations/salesforce/customers:
    get:
      summary: List Salesforce customers (Accounts typed as Customer)
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: object
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Customers
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Salesforce customers

  /api/integrations/salesforce/vendors:
    get:
      summary: List Salesforce vendors (Accounts typed as Vendor/Supplier)
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: object
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Vendors
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Salesforce vendors

  /api/integrations/salesforce/items:
    get:
      summary: List Salesforce items (Product2)
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Items
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Salesforce items

  /api/integrations/salesforce/invoices:
    get:
      summary: List Salesforce invoices (dynamic object detection)
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: object
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Invoices
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Salesforce invoices

  /api/integrations/salesforce/bills:
    get:
      summary: List Salesforce bills/payables (dynamic object detection)
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: object
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Bills
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Salesforce bills

  /api/integrations/salesforce/payments:
    get:
      summary: List Salesforce payments (dynamic object detection)
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: object
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Payments
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Salesforce payments

  /api/integrations/salesforce/chart-of-accounts:
    get:
      summary: List Salesforce Chart of Accounts (dynamic object detection)
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: object
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Chart of Accounts
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Salesforce chart of accounts

  /api/integrations/salesforce/general-ledger:
    get:
      summary: List Salesforce General Ledger entries (dynamic object detection)
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: object
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: General ledger entries
        '401':
          description: Unauthorized
        '500':
          description: Failed to fetch Salesforce general ledger

  /api/integrations/salesforce/status:
    get:
      summary: Check Salesforce connection status for current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Connection status information
          content:
            application/json:
              schema:
                type: object
                properties:
                  connected:
                    type: boolean
                    description: Whether user has an active Salesforce connection
                  status:
                    type: string
                    enum: [active, expired, not_connected]
                    description: Current connection status
                  expiresAt:
                    type: integer
                    description: Token expiration timestamp (if connected)
                  createdAt:
                    type: string
                    format: date-time
                    description: When the connection was created (if connected)
                  instanceUrl:
                    type: string
                    description: Salesforce instance URL (if connected)
                  companyId:
                    type: string
                    description: Associated company ID (if any)
                  company:
                    type: object
                    description: Company data snapshot (if any)
        '401':
          description: Unauthorized
        '500':
          description: Failed to check Salesforce connection status

  /api/integrations/gusto/disconnect:
    post:
      summary: Disconnect Gusto for current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Disconnected
        '401':
          description: Unauthorized
        '500':
          description: Failed to disconnect
  /api/auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
        '401':
          description: Invalid credentials

  /api/auth/signup:
    post:
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
                companyName:
                  type: string
                fullName:
                  type: string
      responses:
        '200':
          description: User created
        '400':
          description: Bad request

  /api/auth/refresh-token:
    post:
      summary: Refresh JWT tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Tokens refreshed
        '401':
          description: Invalid refresh token

  /api/auth/google:
    get:
      summary: Google OAuth callback
      responses:
        '200':
          description: Google OAuth callback handled
        '400':
          description: Invalid callback

  /api/auth/google-login:
    get:
      summary: Google OAuth login page
      responses:
        '200':
          description: Google login page
        '400':
          description: Invalid request
  /api/auth/me:
    get:
      summary: Get current authenticated user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
        '401':
          description: Unauthorized
        '404':
          description: User not found
  /api/auth/microsoft:
    post:
      summary: Microsoft OAuth login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idToken:
                  type: string
      responses:
        '200':
          description: Microsoft login success
        '400':
          description: Invalid token

  /api/auth/forgot-password:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset email sent
        '400':
          description: Email not found

  /api/auth/reset-password:
    post:
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
                confirmNewPassword:
                  type: string
      responses:
        '200':
          description: Password reset successful
        '400':
          description: Invalid or expired token

  /api/user/{userId}:
    get:
      summary: Get user profile
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile
        '404':
          description: User not found

  /api/user/{userId}/profile-picture:
    post:
      summary: Update user profile picture
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Profile picture updated
        '400':
          description: No file uploaded

  /api/user/{userId}/personal-info:
    put:
      summary: Update personal info
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                jobTitle:
                  type: string
                department:
                  type: string
                bio:
                  type: string
      responses:
        '200':
          description: Profile updated
        '404':
          description: User not found

  /api/user/{userId}/contact-info:
    put:
      summary: Update contact info
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                secondaryEmail:
                  type: string
                phoneNumber:
                  type: string
      responses:
        '200':
          description: Contact info updated
        '404':
          description: User not found

  /api/user/{userId}/email-notif-preferences:
    put:
      summary: Update email notification preferences
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailNotifications:
                  type: object
      responses:
        '200':
          description: Preferences updated
        '404':
          description: User not found

  /api/user/{userId}/more-activity:
    put:
      summary: Update more activity preference
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                moreActivity:
                  type: object
      responses:
        '200':
          description: Preference updated
        '404':
          description: User not found

  /api/user/{userId}/change-password:
    put:
      summary: Change user password
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password changed
        '404':
          description: User not found

  /api/companies:
    get:
      summary: Get all companies (paginated)
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of companies to return (default 20)
        - name: lastDoc
          in: query
          required: false
          schema:
            type: string
          description: Document ID of the last company from previous page (for pagination)
      responses:
        '200':
          description: List of companies
          content:
            application/json:
              schema:
                type: object
                properties:
                  companies:
                    type: array
                    items:
                      type: object
                  lastDoc:
                    type: string
        '401':
          description: Unauthorized
    post:
      summary: Create a new company
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CompanyID:
                  type: string
                # ...other company fields...
      responses:
        '201':
          description: Company created
        '400':
          description: CompanyID required
        '401':
          description: Unauthorized
  /api/companies/{id}:
    get:
      summary: Get a company by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Company data
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not found

  # Strategic Simulation (strategicsim) endpoints
  /api/strategicsim/kpis/{companyId}/market-share:
    get:
      summary: Get market share for a company
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Market share value
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      marketShare:
                        type: string
                        description: Percentage as a string with two decimals
                      sources:
                        type: array
                        items:
                          type: string
        '404':
          description: Company not found
        '500':
          description: Failed to fetch market share

  /api/strategicSim/simulations/{companyId}/{status}:
    get:
      summary: Get simulations by status for a company
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
            enum: [pending, running, completed, failed]
      responses:
        '200':
          description: Simulations list
          content:
            application/json:
              schema:
                type: object
                properties:
                  simulationsData:
                    type: array
                    items:
                      type: object
        '404':
          description: Company not found

  /api/strategicSim/simulations/{companyId}/timeframe/{days}:
    get:
      summary: Get simulations updated within the last N days
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: days
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Simulations within timeframe
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
        '404':
          description: Company not found

  /api/strategicSim/simulations/{companyId}/competitive-index-score:
    get:
      summary: Calculate and retrieve competitive index score
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Competitive index score and breakdown
          content:
            application/json:
              schema:
                type: object
                properties:
                  competitiveIndexScore:
                    type: number
                  breakdown:
                    type: object
                    properties:
                      marketShare:
                        type: number
                      npsScore:
                        type: number
                      winLossRatio:
                        type: number
                      competitorBenchmark:
                        type: number
        '404':
          description: Company not found

  /api/strategicSim/simulations/{companyId}/scenario-roi:
    get:
      summary: Get scenario ROI metrics from the latest completed simulation
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Scenario ROI metrics
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      scenarioRoiPercent:
                        type: number
                      discountRate:
                        type: number
                      horizonYears:
                        type: integer
                      baselineNPV:
                        type: number
                      scenarioNPV:
                        type: number
                      scenarioIRR:
                        type: number
        '404':
          description: Company or simulations not found
        '500':
          description: Failed to compute Scenario ROI

  /api/strategicSim/simulations/{companyId}/recommend-optimal:
    get:
      summary: Recommend the optimal strategy for the company based on latest simulation and composite scoring
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Recommended strategy with supporting metrics
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      recommendedStrategy:
                        type: object
                      compositeScore:
                        type: number
                      metrics:
                        type: object
                        properties:
                          scenarioRoiPercent:
                            type: number
                          discountRate:
                            type: number
                          horizonYears:
                            type: integer
                          competitiveIndexScore:
                            type: number
                      alternatives:
                        type: array
                        items:
                          type: object
        '404':
          description: Company or simulations not found

  /api/strategicSim/simulations/{companyId}/search/{query}:
    get:
      summary: Search simulations by name
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Matching simulations
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
        '404':
          description: Company not found

  /api/strategicSim/simulations/{companyId}:
    post:
      summary: Create a new strategic simulation
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                simulationType:
                  type: string
                  description: e.g., divestiture, blue-ocean, pestel, strategic-analysis
                framework:
                  type: string
                  description: e.g., Porter's Five Forces
                scenario:
                  type: string
                  description: e.g., baseline
      responses:
        '201':
          description: Simulation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  simulationId:
                    type: string
                  simulation:
                    type: object
        '404':
          description: Company not found
        '500':
          description: Failed to create simulation

  /api/strategicSim/simulations/{companyId}/deliverables:
    post:
      summary: Generate deliverables PDF content for a company
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                deliverables:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Generated deliverables PDF payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  pdf:
                    type: string
                    description: PDF binary as a string payload
        '404':
          description: Company not found

  /api/strategicSim/simulations/{companyId}/sensitivity:
    post:
      summary: Run scenario sensitivity analysis on latest simulation
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sweeps:
                  type: object
                  description: Parameters to sweep for sensitivity analysis
                horizonYears:
                  type: integer
      responses:
        '200':
          description: Sensitivity analysis results
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
        '404':
          description: Company or simulations not found
    put:
      summary: Update a company by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              # ...fields to update...
      responses:
        '200':
          description: Company updated
        '401':
          description: Unauthorized
        '404':
          description: Not found
    delete:
      summary: Delete a company by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Company deleted
        '401':
          description: Unauthorized
        '404':
          description: Not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT