openapi: 3.1.0
info:
  title: vSuite Brain Backend API
  version: 1.0.0
  description: API documentation for authentication and user management.

servers:
  - url: "http://localhost:5001"
  - url: "https://vsuite-service-prod-1046215561949.us-central1.run.app"

paths:
  /api/auth/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful login
        '401':
          description: Invalid credentials

  /api/auth/signup:
    post:
      summary: User registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
                companyName:
                  type: string
                fullName:
                  type: string
      responses:
        '200':
          description: User created
        '400':
          description: Bad request

  /api/auth/refresh-token:
    post:
      summary: Refresh JWT tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          description: Tokens refreshed
        '401':
          description: Invalid refresh token

  /api/auth/google:
    get:
      summary: Google OAuth callback
      responses:
        '200':
          description: Google OAuth callback handled
        '400':
          description: Invalid callback

  /api/auth/google-login:
    get:
      summary: Google OAuth login page
      responses:
        '200':
          description: Google login page
        '400':
          description: Invalid request
  /api/auth/me:
    get:
      summary: Get current authenticated user profile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile
        '401':
          description: Unauthorized
        '404':
          description: User not found
  /api/auth/microsoft:
    post:
      summary: Microsoft OAuth login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                idToken:
                  type: string
      responses:
        '200':
          description: Microsoft login success
        '400':
          description: Invalid token

  /api/auth/forgot-password:
    post:
      summary: Request password reset
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset email sent
        '400':
          description: Email not found

  /api/auth/reset-password:
    post:
      summary: Reset password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                newPassword:
                  type: string
                confirmNewPassword:
                  type: string
      responses:
        '200':
          description: Password reset successful
        '400':
          description: Invalid or expired token

  /api/user/{userId}:
    get:
      summary: Get user profile
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User profile
        '404':
          description: User not found

  /api/user/{userId}/profile-picture:
    post:
      summary: Update user profile picture
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Profile picture updated
        '400':
          description: No file uploaded

  /api/user/{userId}/personal-info:
    put:
      summary: Update personal info
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                jobTitle:
                  type: string
                department:
                  type: string
                bio:
                  type: string
      responses:
        '200':
          description: Profile updated
        '404':
          description: User not found

  /api/user/{userId}/contact-info:
    put:
      summary: Update contact info
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                secondaryEmail:
                  type: string
                phoneNumber:
                  type: string
      responses:
        '200':
          description: Contact info updated
        '404':
          description: User not found

  /api/user/{userId}/email-notif-preferences:
    put:
      summary: Update email notification preferences
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailNotifications:
                  type: object
      responses:
        '200':
          description: Preferences updated
        '404':
          description: User not found

  /api/user/{userId}/more-activity:
    put:
      summary: Update more activity preference
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                moreActivity:
                  type: object
      responses:
        '200':
          description: Preference updated
        '404':
          description: User not found

  /api/user/{userId}/change-password:
    put:
      summary: Change user password
      security:
        - bearerAuth: []
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: Password changed
        '404':
          description: User not found

  /api/companies:
    get:
      summary: Get all companies (paginated)
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Number of companies to return (default 20)
        - name: lastDoc
          in: query
          required: false
          schema:
            type: string
          description: Document ID of the last company from previous page (for pagination)
      responses:
        '200':
          description: List of companies
          content:
            application/json:
              schema:
                type: object
                properties:
                  companies:
                    type: array
                    items:
                      type: object
                  lastDoc:
                    type: string
        '401':
          description: Unauthorized
    post:
      summary: Create a new company
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CompanyID:
                  type: string
                # ...other company fields...
      responses:
        '201':
          description: Company created
        '400':
          description: CompanyID required
        '401':
          description: Unauthorized
  /api/companies/{id}:
    get:
      summary: Get a company by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Company data
          content:
            application/json:
              schema:
                type: object
        '401':
          description: Unauthorized
        '404':
          description: Not found

  # Strategic Simulation (strategicsim) endpoints
  /api/strategicsim/kpis/{companyId}/market-share:
    get:
      summary: Get market share for a company
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Market share value
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      marketShare:
                        type: string
                        description: Percentage as a string with two decimals
                      sources:
                        type: array
                        items:
                          type: string
        '404':
          description: Company not found
        '500':
          description: Failed to fetch market share

  /api/strategicSim/simulations/{companyId}/{status}:
    get:
      summary: Get simulations by status for a company
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
            enum: [pending, running, completed, failed]
      responses:
        '200':
          description: Simulations list
          content:
            application/json:
              schema:
                type: object
                properties:
                  simulationsData:
                    type: array
                    items:
                      type: object
        '404':
          description: Company not found

  /api/strategicSim/simulations/{companyId}/timeframe/{days}:
    get:
      summary: Get simulations updated within the last N days
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: days
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Simulations within timeframe
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
        '404':
          description: Company not found

  /api/strategicSim/simulations/{companyId}/competitive-index-score:
    get:
      summary: Calculate and retrieve competitive index score
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Competitive index score and breakdown
          content:
            application/json:
              schema:
                type: object
                properties:
                  competitiveIndexScore:
                    type: number
                  breakdown:
                    type: object
                    properties:
                      marketShare:
                        type: number
                      npsScore:
                        type: number
                      winLossRatio:
                        type: number
                      competitorBenchmark:
                        type: number
        '404':
          description: Company not found

  /api/strategicSim/simulations/{companyId}/scenario-roi:
    get:
      summary: Get scenario ROI metrics from the latest completed simulation
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Scenario ROI metrics
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      scenarioRoiPercent:
                        type: number
                      discountRate:
                        type: number
                      horizonYears:
                        type: integer
                      baselineNPV:
                        type: number
                      scenarioNPV:
                        type: number
                      scenarioIRR:
                        type: number
        '404':
          description: Company or simulations not found
        '500':
          description: Failed to compute Scenario ROI

  /api/strategicSim/simulations/{companyId}/search/{query}:
    get:
      summary: Search simulations by name
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Matching simulations
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
        '404':
          description: Company not found

  /api/strategicSim/simulations/{companyId}:
    post:
      summary: Create a new strategic simulation
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                simulationType:
                  type: string
                  description: e.g., divestiture, blue-ocean, pestel, strategic-analysis
                framework:
                  type: string
                  description: e.g., Porter's Five Forces
                scenario:
                  type: string
                  description: e.g., baseline
      responses:
        '201':
          description: Simulation created
          content:
            application/json:
              schema:
                type: object
                properties:
                  simulationId:
                    type: string
                  simulation:
                    type: object
        '404':
          description: Company not found
        '500':
          description: Failed to create simulation

  /api/strategicSim/simulations/{companyId}/deliverables:
    post:
      summary: Generate deliverables PDF content for a company
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                deliverables:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Generated deliverables PDF payload
          content:
            application/json:
              schema:
                type: object
                properties:
                  pdf:
                    type: string
                    description: PDF binary as a string payload
        '404':
          description: Company not found

  /api/strategicSim/simulations/{companyId}/sensitivity:
    post:
      summary: Run scenario sensitivity analysis on latest simulation
      security:
        - bearerAuth: []
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sweeps:
                  type: object
                  description: Parameters to sweep for sensitivity analysis
                horizonYears:
                  type: integer
      responses:
        '200':
          description: Sensitivity analysis results
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
        '404':
          description: Company or simulations not found
    put:
      summary: Update a company by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              # ...fields to update...
      responses:
        '200':
          description: Company updated
        '401':
          description: Unauthorized
        '404':
          description: Not found
    delete:
      summary: Delete a company by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Company deleted
        '401':
          description: Unauthorized
        '404':
          description: Not found

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT